@model Padaria.Web.Models.UserViewModel




<div class="modal" id="createUser" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" style="text-align:center">Create Users</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Users.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Users.FullName, new { htmlAttributes = new { @class = "form-controla" } })
                                @Html.ValidationMessageFor(model => model.Users.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Users.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Users.UserName, new { htmlAttributes = new { @class = "form-controla" } })
                                @Html.ValidationMessageFor(model => model.Users.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Users.PassWord, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Users.PassWord, new { htmlAttributes = new { @class = "form-controla" } })
                                @Html.ValidationMessageFor(model => model.Users.PassWord, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Users.ConPassWord, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Users.ConPassWord, new { htmlAttributes = new { @class = "form-controla" } })
                                @Html.ValidationMessageFor(model => model.Users.ConPassWord, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Users.PermissionID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Users.PermissionID, Model.Permission, htmlAttributes: new { @class = "form-controla" })
                                @Html.ValidationMessageFor(model => model.Users.PermissionID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>

                }
               
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->



<script type="text/javascript">

    
    $.validator.unobtrusive.parse("form");

    $('input[type=submit]').click(function () {
        debugger;
        var users = {
            FullName: $('#Users_FullName').val(),
            UserName: $('#Users_UserName').val(),
            PassWord: $('#Users_PassWord').val(),
            PermissionID: $('#Users_PermissionID').val(),
            ConPassWord: $('#Users_ConPassWord').val()
        };

        $.ajax({
            url: "/User/Create",
            type: "POST",
            datatype: "json",
            data: { users },
            success: function (data) {
                if (data.result > 0) {
                    alert('Users created successfully');
                    doClick();
                }

            }, error: function () {
                alert('error');
            }

        });
    });
    $('.btn.btn-default').click(function () {
        doClick();
    });
    $('.close').click(function () {
        doClick();
    });

    function doClick() {
        $('.modal').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
        $('.modal-backdrop.in').remove();
    }

</script>
