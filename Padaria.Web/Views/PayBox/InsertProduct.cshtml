@model IEnumerable<Padaria.Web.Models.InsertProductViewModel>



<table class="table" id="tbl">
    @*@Html.AntiForgeryToken();*@
    <thead>
        <tr style="background-color:yellow; text-align:center">

            <td></td>
            <td>

            <td></td>


            <td></td>
            @*<td></td>*@
            <td>
                <b id="valueFull">Full Value $ @Model.Sum(c => c.FullSale)</b>
            </td>
        </tr>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Product.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product.Code)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Product.PurchasePrice)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Product.SalePrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FullSale)
            </th>

        </tr>
    </thead>


    <tbody>
        @foreach (var item in Model)
        {

            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Code)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.Product.PurchasePrice)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Product.SalePrice)
                </td>
                <td>

                    @if (item.ByWeight == true)
                    {
                        if (item.Quantity < 1000)
                        {
                            @Html.Name("0,");  @Html.DisplayFor(modelItem => item.Quantity); @Html.Name("kg");
                        }
                        else if (item.Quantity <= 9999)
                        {
                            var number = item.Quantity.ToString().Substring(0, 1);
                            var w = item.Quantity.ToString().Length;
                            var finalNumber = item.Quantity.ToString().Substring(1, w - 1);
                            number += "." + finalNumber + "kg";
                            @Html.DisplayFor(modelItem => number)


                        }
                        else if (item.Quantity > 9999)
                        {
                            var number = item.Quantity.ToString().Substring(0, 2);
                            var w = item.Quantity.ToString().Length;
                            var finalNumber = item.Quantity.ToString().Substring(1, w - 2);
                            number += "." + finalNumber + "kg";
                            @Html.DisplayFor(modelItem => number)
                        }

                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Quantity) @Html.Name("x");
                    }



                </td>
                <td>
                    $ @Html.DisplayFor(modelItem => item.FullSale)
                </td>


                @*@Html.*@
                @*@Html.ActionLink("Edit", "Edit", new { id = item != null ? item.Product.ProductID : 0 }) |
                    @Html.ActionLink("Details", "Details", new { id = item != null ? item.Product.ProductID : 0 }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item != null ? item.Product.ProductID : 0 })*@

            </tr>

        }
    </tbody>


</table>

<script type="text/javascript">
    $(document).ready(function () {
        $('#dTbl').css('max-height', '400px');
        $('#dTbl').css('overflow', 'auto');
        $("th").css('text-align', 'center');
        $("td").css('text-align', 'center')
    });
</script>