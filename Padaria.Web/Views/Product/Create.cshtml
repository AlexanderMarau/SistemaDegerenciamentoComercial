@model Padaria.Web.Models.ProductViewModel
@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2 >Product Create</h2>
        <hr />
        <h2>Product Details</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Product.TypeOfRegistration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Product.TypeOfRegistrationID, Model.TypeOfRegistration, htmlAttributes: new { @class = "form-controla" })
                @Html.ValidationMessageFor(model =>  model.Product.TypeOfRegistration, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-controla" } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Code, new { htmlAttributes = new { @class = "form-controla" } })
                @Html.ValidationMessageFor(model => model.Product.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Product.CategoryID, Model.Category, htmlAttributes: new { @class = "form-controla" })
                @Html.ValidationMessageFor(model => model.Product.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.PurchasePrice, new { htmlAttributes = new { @class = "form-controla" } })
                @Html.ValidationMessageFor(model => model.Product.PurchasePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.SalePrice, new { htmlAttributes = new { @class = "form-controla" } })
                @Html.ValidationMessageFor(model => model.Product.SalePrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-controlaT" } })
                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <h2>Product Stock</h2>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Stock.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock.Quantity, new { htmlAttributes = new { @class = "form-controla" } })
                @Html.ValidationMessageFor(model => model.Stock.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Stock.MinimunQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock.MinimunQuantity, new { htmlAttributes = new { @class = "form-controla" } })
                @Html.ValidationMessageFor(model => model.Stock.MinimunQuantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Stock.MaximunQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock.MaximunQuantity, new { htmlAttributes = new { @class = "form-controla" } })
                @Html.ValidationMessageFor(model => model.Stock.MaximunQuantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Stock.ManageStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock.ManageStock, new { htmlAttributes = new { @class = "checkbox" } })
                @Html.ValidationMessageFor(model => model.Stock.ManageStock, "", new { @class = "text-danger" })
            </div>
        </div>
      

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List", null, htmlAttributes: new {@class="btn btn-default" })
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
